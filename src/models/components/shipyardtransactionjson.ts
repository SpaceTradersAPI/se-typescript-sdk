/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Results of a transaction with a shipyard.
 */
export type ShipyardTransactionJson = {
    /**
     * The symbol of the waypoint.
     */
    waypointSymbol: string;
    /**
     * The symbol of the ship that was the subject of the transaction.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    shipSymbol: string;
    /**
     * The symbol of the ship that was the subject of the transaction.
     */
    shipType: string;
    /**
     * The price of the transaction.
     */
    price: number;
    /**
     * The symbol of the agent that made the transaction.
     */
    agentSymbol: string;
    /**
     * The timestamp of the transaction.
     */
    timestamp: Date;
};

/** @internal */
export namespace ShipyardTransactionJson$ {
    export type Inbound = {
        waypointSymbol: string;
        shipSymbol: string;
        shipType: string;
        price: number;
        agentSymbol: string;
        timestamp: string;
    };

    export const inboundSchema: z.ZodType<ShipyardTransactionJson, z.ZodTypeDef, Inbound> = z
        .object({
            waypointSymbol: z.string(),
            shipSymbol: z.string(),
            shipType: z.string(),
            price: z.number().int(),
            agentSymbol: z.string(),
            timestamp: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
        })
        .transform((v) => {
            return {
                waypointSymbol: v.waypointSymbol,
                shipSymbol: v.shipSymbol,
                shipType: v.shipType,
                price: v.price,
                agentSymbol: v.agentSymbol,
                timestamp: v.timestamp,
            };
        });

    export type Outbound = {
        waypointSymbol: string;
        shipSymbol: string;
        shipType: string;
        price: number;
        agentSymbol: string;
        timestamp: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShipyardTransactionJson> = z
        .object({
            waypointSymbol: z.string(),
            shipSymbol: z.string(),
            shipType: z.string(),
            price: z.number().int(),
            agentSymbol: z.string(),
            timestamp: z.date().transform((v) => v.toISOString()),
        })
        .transform((v) => {
            return {
                waypointSymbol: v.waypointSymbol,
                shipSymbol: v.shipSymbol,
                shipType: v.shipType,
                price: v.price,
                agentSymbol: v.agentSymbol,
                timestamp: v.timestamp,
            };
        });
}
