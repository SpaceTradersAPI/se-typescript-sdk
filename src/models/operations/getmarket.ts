/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as z from "zod";

export type GetMarketRequest = {
    /**
     * The system symbol
     */
    systemSymbol: string;
    /**
     * The waypoint symbol
     */
    waypointSymbol: string;
};

/**
 * Successfully fetched the market.
 */
export type GetMarketResponseBody = {
    data: components.MarketJson;
};

export type GetMarketResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully fetched the market.
     */
    object?: GetMarketResponseBody | undefined;
};

/** @internal */
export namespace GetMarketRequest$ {
    export type Inbound = {
        systemSymbol: string;
        waypointSymbol: string;
    };

    export const inboundSchema: z.ZodType<GetMarketRequest, z.ZodTypeDef, Inbound> = z
        .object({
            systemSymbol: z.string(),
            waypointSymbol: z.string(),
        })
        .transform((v) => {
            return {
                systemSymbol: v.systemSymbol,
                waypointSymbol: v.waypointSymbol,
            };
        });

    export type Outbound = {
        systemSymbol: string;
        waypointSymbol: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMarketRequest> = z
        .object({
            systemSymbol: z.string(),
            waypointSymbol: z.string(),
        })
        .transform((v) => {
            return {
                systemSymbol: v.systemSymbol,
                waypointSymbol: v.waypointSymbol,
            };
        });
}

/** @internal */
export namespace GetMarketResponseBody$ {
    export type Inbound = {
        data: components.MarketJson$.Inbound;
    };

    export const inboundSchema: z.ZodType<GetMarketResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            data: components.MarketJson$.inboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });

    export type Outbound = {
        data: components.MarketJson$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMarketResponseBody> = z
        .object({
            data: components.MarketJson$.outboundSchema,
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });
}

/** @internal */
export namespace GetMarketResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        object?: GetMarketResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetMarketResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => GetMarketResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: GetMarketResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMarketResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => GetMarketResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
