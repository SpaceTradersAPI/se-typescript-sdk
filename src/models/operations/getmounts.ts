/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as z from "zod";

export type GetMountsSecurity = {
    agentToken: string;
};

export type GetMountsRequest = {
    /**
     * The ship's symbol.
     */
    shipSymbol: string;
};

/**
 * Got installed mounts.
 */
export type GetMountsGetMounts200Response = {
    data: Array<components.ShipMountJson>;
};

export type GetMountsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Got installed mounts.
     */
    getMounts200Response?: GetMountsGetMounts200Response | undefined;
};

/** @internal */
export namespace GetMountsSecurity$ {
    export type Inbound = {
        AgentToken: string;
    };

    export const inboundSchema: z.ZodType<GetMountsSecurity, z.ZodTypeDef, Inbound> = z
        .object({
            AgentToken: z.string(),
        })
        .transform((v) => {
            return {
                agentToken: v.AgentToken,
            };
        });

    export type Outbound = {
        AgentToken: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMountsSecurity> = z
        .object({
            agentToken: z.string(),
        })
        .transform((v) => {
            return {
                AgentToken: v.agentToken,
            };
        });
}

/** @internal */
export namespace GetMountsRequest$ {
    export type Inbound = {
        shipSymbol: string;
    };

    export const inboundSchema: z.ZodType<GetMountsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            shipSymbol: z.string(),
        })
        .transform((v) => {
            return {
                shipSymbol: v.shipSymbol,
            };
        });

    export type Outbound = {
        shipSymbol: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMountsRequest> = z
        .object({
            shipSymbol: z.string(),
        })
        .transform((v) => {
            return {
                shipSymbol: v.shipSymbol,
            };
        });
}

/** @internal */
export namespace GetMountsGetMounts200Response$ {
    export type Inbound = {
        data: Array<components.ShipMountJson$.Inbound>;
    };

    export const inboundSchema: z.ZodType<GetMountsGetMounts200Response, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.array(components.ShipMountJson$.inboundSchema),
        })
        .transform((v) => {
            return {
                data: v.data,
            };
        });

    export type Outbound = {
        data: Array<components.ShipMountJson$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMountsGetMounts200Response> =
        z
            .object({
                data: z.array(components.ShipMountJson$.outboundSchema),
            })
            .transform((v) => {
                return {
                    data: v.data,
                };
            });
}

/** @internal */
export namespace GetMountsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        "Get Mounts 200 Response"?: GetMountsGetMounts200Response$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetMountsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            "Get Mounts 200 Response": z
                .lazy(() => GetMountsGetMounts200Response$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v["Get Mounts 200 Response"] === undefined
                    ? null
                    : { getMounts200Response: v["Get Mounts 200 Response"] }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        "Get Mounts 200 Response"?: GetMountsGetMounts200Response$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMountsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getMounts200Response: z
                .lazy(() => GetMountsGetMounts200Response$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.getMounts200Response === undefined
                    ? null
                    : { "Get Mounts 200 Response": v.getMounts200Response }),
            };
        });
}
